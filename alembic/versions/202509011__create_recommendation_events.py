# --- START OF NEW MIGRATION FILE: alembic/versions/20250911_add_recommendation_events_table_and_tracking_fields.py ---
"""add recommendation_events table and tracking_fields

Revision ID: 20250911_add_recommendation_events_table_and_tracking_fields
Revises: 202509010_1_create_tran_rec
Create Date: <the_creation_date>

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
# ⚠️ ملاحظة: احتفظ بالـ revision ID الذي ولّده Alembic تلقائيًا.
revision = 20250911_add_recommendation_events_table_and_tracking_fields' # استبدل هذا بالمعرف الصحيح
down_revision = '202509010_1_create_tran_rec' # ⚠️ تأكد من أن هذا هو معرف آخر ملف ترحيل لديك
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # --- Step 1: Create the new recommendation_events table ---
    print("Step 1: Creating recommendation_events table...")
    op.create_table('recommendation_events',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('recommendation_id', sa.Integer(), nullable=False),
        sa.Column('event_type', sa.String(length=50), nullable=False),
        sa.Column('event_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('event_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(['recommendation_id'], ['recommendations.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recommendation_events_event_type'), 'recommendation_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_recommendation_events_recommendation_id'), 'recommendation_events', ['recommendation_id'], unique=False)
    print("Step 1: Finished creating table.")

    # --- Step 2: Add new tracking columns to the recommendations table ---
    print("Step 2: Adding tracking columns to recommendations table...")
    with op.batch_alter_table('recommendations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('highest_price_reached', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('lowest_price_reached', sa.Float(), nullable=True))
    print("Step 2: Finished adding columns.")

    # --- Step 3: Data Migration - Create initial 'CREATE' events for existing recommendations ---
    print("Step 3: Starting data migration to create initial events for existing recommendations...")
    # This SQL statement creates a 'CREATE' event for every existing recommendation.
    # It extracts the initial data (entry, sl, targets) and stores it in the event_data JSON field.
    # It's safe to run because it only considers recommendations that don't already have a 'CREATE' event.
    op.execute("""
        INSERT INTO recommendation_events (recommendation_id, event_type, event_timestamp, event_data)
        SELECT
            r.id,
            'CREATE',
            r.created_at,
            jsonb_build_object(
                'entry', r.entry,
                'sl', r.stop_loss,
                'targets', r.targets
            )
        FROM
            recommendations r
        LEFT JOIN
            recommendation_events re ON r.id = re.recommendation_id AND re.event_type = 'CREATE'
        WHERE
            re.id IS NULL;
    """)
    print("Step 3: Data migration complete.")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # --- Revert Step 2: Drop tracking columns ---
    with op.batch_alter_table('recommendations', schema=None) as batch_op:
        batch_op.drop_column('lowest_price_reached')
        batch_op.drop_column('highest_price_reached')

    # --- Revert Step 1: Drop the recommendation_events table ---
    op.drop_index(op.f('ix_recommendation_events_recommendation_id'), table_name='recommendation_events')
    op.drop_index(op.f('ix_recommendation_events_event_type'), table_name='recommendation_events')
    op.drop_table('recommendation_events')
    
    # ### end Alembic commands ###
# --- END OF NEW MIGRATION FILE ---