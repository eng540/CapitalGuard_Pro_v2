# CapitalGuard Pro v2 - Environment Variables
# -------------------------------------------------
# Copy this file to .env and fill in your actual values.
# Do NOT commit the .env file to version control.

# --- APPLICATION / DATABASE ---
# The environment mode. Use 'dev' for development, 'prod' for production.
ENV=dev

# Full database connection string.
# For local development with Docker Compose, this is typically handled automatically.
# For production, use the connection string provided by your database host (e.g., Railway, Supabase).
# Example for PostgreSQL: DATABASE_URL=postgresql+psycopg://user:password@host:port/dbname
DATABASE_URL=postgresql+psycopg://cg:cgpass@db:5432/capitalguard


# --- TELEGRAM BOT ---
# The token for your Telegram bot, obtained from @BotFather. This is critical.
TELEGRAM_BOT_TOKEN=

# The numeric Chat ID of your main/public channel for "Force Subscription".
# Users must join this channel to use the bot.
# To get the ID: forward a message from the channel to a bot like @userinfobot.
# It's usually a long negative number starting with -100.
TELEGRAM_CHAT_ID=

# A comma-separated list of Telegram usernames for bot administrators.
# Do NOT include the '@' symbol. These users will have access to admin commands.
# Example: ADMIN_USERNAMES=my_admin_user,another_admin
ADMIN_USERNAMES=

# The full URL where Telegram should send webhook updates.
# Only needed for production deployment. Leave blank for local development (polling).
# Example: TELEGRAM_WEBHOOK_URL=https://your-app-name.up.railway.app/webhook/telegram
TELEGRAM_WEBHOOK_URL=

# (Legacy/Optional) Path for the python-telegram-bot persistence file.
TELEGRAM_STATE_FILE=.ptb_state.pkl


# --- API & SECURITY ---
# A secret key to protect your API endpoints. Generate a strong, random string.
API_KEY=change-me

# Secret for validating webhooks from TradingView.
# This should match the secret you enter in the TradingView alert settings.
TV_WEBHOOK_SECRET=your_tradingview_webhook_secret


# --- BINANCE API CREDENTIALS (Optional - for AutoTrading) ---
# These are only required if you plan to use the AutoTrade feature.
BINANCE_API_KEY=
BINANCE_API_SECRET=
BINANCE_FUT_API_KEY=
BINANCE_FUT_API_SECRET=


# --- FEATURE TOGGLES & SETTINGS ---
# Set to "1" to enable the AutoTrade service. If "0", it will only run in dry-run mode.
AUTO_TRADE_ENABLED=0

# Set to "1" to allow the AutoTrade service to place REAL orders. If "0", it will log trades but not execute them.
# Requires AUTO_TRADE_ENABLED=1 to have any effect.
TRADE_LIVE_ENABLED=0

# The default risk percentage to use for auto-trading if not specified otherwise. (e.g., 1.0 means 1% of capital).
RISK_DEFAULT_PCT=1.0

# Set to "1" to enable the real-time monitoring system (PriceStreamer + AlertService).
# Set to "0" to disable it completely.
ENABLE_WATCHER="1"

# The primary source for market data.
# Use "binance" for direct API calls, or "coingecko" as a fallback.
MARKET_DATA_PROVIDER="binance"

# (Optional) Percentage threshold for "near price" alerts. Not currently implemented in core logic.
NEAR_ALERT_PCT=1.5

# (Optional) Toggle for a future trailing stop feature. Not currently implemented.
TRAILING_STOP_ENABLED=0


# --- OBSERVABILITY (Optional) ---
# Your Sentry DSN for error tracking and monitoring.
# Leave blank to disable Sentry integration.
SENTRY_DSN=