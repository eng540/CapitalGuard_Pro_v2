from typing import Protocol, Optional, List, Dict, Any
from .entities import Recommendation

class RecommendationRepoPort(Protocol):
    def add(self, rec: Recommendation) -> Recommendation: ...
    def get(self, rec_id: int) -> Optional[Recommendation]: ...
    def list_open(self, channel_id: int | None = None) -> List[Recommendation]: ...
    def list_all(self, channel_id: int | None = None) -> List[Recommendation]: ...
    def update(self, rec: Recommendation) -> Recommendation: ...

class NotifierPort(Protocol):
    def publish(self, text: str) -> None: ...

class PriceFeedPort(Protocol):
    def get_price(self, symbol: str) -> float: ...
